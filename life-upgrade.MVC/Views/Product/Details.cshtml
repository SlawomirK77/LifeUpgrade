@using LifeUpgrade.Application.ProductRating.Commands.CreateProductRating
@using LifeUpgrade.Application.WebShop.Commands.CreateWebShop
@using LifeUpgrade.Domain.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model LifeUpgrade.Application.Product.ProductDto
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/dragable.css" asp-append-version="true"/>

<h1>@Model.Name Details</h1>

<div>
    <h4>Product</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Uri)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Uri)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <div class="container">
            <partial name="_CreateProductRating" model="new CreateOrEditProductRatingCommand(){ProductEncodedName=Model.EncodedName!}"/>
        </div>
    </dl>
</div>
<div>
    <partial name="_CreateWebShop" model="new CreateWebShopCommand(){ProductEncodedName=Model.EncodedName!}"/>
    <partial name="_CreatePhoto" model="new CreatePhoto(){ProductEncodedName=Model.EncodedName!}"/>
    <partial name="_EditPhotos" model="new EditPhotos(Model.EncodedName!, Model.Photos)"/>
    <br/>
    <a class="btn btn-outline-secondary" asp-controller="Product" asp-action="Edit" asp-route-encodedName="@Model.EncodedName">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>      

<div id="webshops" class="row" data-encoded-name="@Model.EncodedName"></div>
<div id="photos" class="row" data-encoded-name="@Model.EncodedName"></div>
<div id="rating" class="row" data-encoded-name="@Model.EncodedName" data-user-id="@UserManager.GetUserId(User)"></div> @*container is empty but data-encoded-name is required somehow*@

@section Scripts{
    <script src="~/js/Product/Details.js"></script>
    <script src="~/js/Photo/EditPhotos.js"></script>
    <script src="~/js/Photo/ChangeOrderPhotos.js"></script>
    <script src="~/js/Photo/AddPhotos.js"></script>
    <script src="~/js/Shared/DragAndDrop.js"></script>
}
