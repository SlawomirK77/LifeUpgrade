@model LifeUpgrade.MVC.Helpers.PaginatedList<LifeUpgrade.Domain.Entities.Product>

@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="row">
    @foreach (var item in Model)
    {
        <div class="card m-3" style="width: 18rem;">
        @if (item.Photos != null)
        {
            <img class="card-img-top" src="data:image/*;base64,@(Convert.ToBase64String(item.Photos[0].Bytes.ToArray()))" alt="image"/>
        }
            <div class="card-body">
                <h5 class="card-title">@item.Name</h5>
                <h6 class="card-subtitle mb-2 text-muted">Price: $@item.Price</h6>
                <a class="btn btn-primary" asp-controller="Product" asp-action="Details" asp-route-encodedName="@item.EncodedName">Details</a>
                <a class="btn btn-outline-secondary" asp-controller="Product" asp-action="Edit" asp-route-encodedName="@item.EncodedName">Edit</a>
            </div>
        </div> 
    }
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-primary @nextDisabled">
    Next
</a>